wrr.c:    return rq_of_wrr_rq(wrr_se->wrr);
wrr.c:    list_add_tail(&wrr_se->list_node, & wrr_rq->wrr_list);
wrr.c:    wrr_rq->load += wrr_se->weight;
wrr.c:    wrr_se->rem_time_slice = wrr_se->weight * WRR_TIME_SLICE_UNIT;
wrr.c:    list_del_init(&wrr_se->list_node);
wrr.c:    wrr_rq->load -= wrr_se->weight;
wrr.c:    wrr_se->rem_time_slice = wrr_se->weight * WRR_TIME_SLICE_UNIT;
wrr.c:    list_move_tail(&wrr_se->list_node, &wrr_rq->wrr_list);
wrr.c:    wrr_se->rem_time_slice = wrr_se->weight * WRR_TIME_SLICE_UNIT;
wrr.c:    printk("[%s] CPU: %d curr_pid: %d remain time: %d" , __func__, cpu_of(rq), curr->pid, wrr_se->rem_time_slice);
wrr.c:    wrr_se->rem_time_slice -= 1;
wrr.c:    if (wrr_se->rem_time_slice < 0){
wrr.c:    // rq->wrr->load -= p->wrr_se->weight; @J CHECK! if not careful might double-subtract
